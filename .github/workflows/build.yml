name: Build Wheels

on:
  push:
  pull_request:
  release:
    types: [created]

jobs:
  build:
    env:
      buildDir: '${{ github.workspace }}/build/'
      vcpkg_commit: 'a037d826492039db9d58af47a1e1248037d15f40'
    runs-on: windows-2016
    strategy:
      matrix:
        python-version: [3.6,3.7,3.8,3.9]
        arch: ['x64','x86']
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.arch }} 
      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: |
            vcpkg/
          key: ${{ runner.os }}-${{ env.vcpkg_commit }}-${{ matrix.arch }} 
      - name: Install vcpkg
        if: steps.cache-primes.outputs.cache-hit != 'true'
        uses: lukka/run-vcpkg@v6
        with:
          setupOnly: true
          vcpkgGitCommitId: ${{ env.vcpkg_commit }}
      - name: Build Cairo x64 and x86
        if: steps.cache-primes.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          & "$env:VCPKG_ROOT/vcpkg.exe" install cairo[core]:${{ matrix.arch }}-windows-static

      - name: Build Wheels
        shell: cmd
        run: |
          $env:INCLUDE="%VCPKG_ROOT%\installed\${{ matrix.arch }}-windows-static\include\cairo"
          $env:LIB="%VCPKG_ROOT%\installed\${{ matrix.arch }}-windows\lib"    
          pip install build
          python -m build

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          path: vcpkg\installed
          name: cairo.zip
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          path: dist
          name: dist.zip
