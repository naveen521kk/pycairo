name: Build Wheels

on:
  push:
  pull_request:
  release:
    types: [created]

jobs:
  build:
    env:
      buildDir: '${{ github.workspace }}/build/'
    runs-on: windows-2016
    strategy:
      matrix:
        python-version: [3.6]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: lukka/get-cmake@latest
      
      - name: Restore from cache and install vcpkg
        # Download and build vcpkg, without installing any port. If content is cached already, it is a no-op.
        uses: lukka/run-vcpkg@v6
        with:
          setupOnly: true
          vcpkgGitCommitId: a037d826492039db9d58af47a1e1248037d15f40
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build Cairo
        shell: pwsh
        run: |
          & "$env:VCPKG_ROOT/vcpkg.exe" install cairo:x64-windows-static
      - name: Build PkgConfig
        shell: pwsh
        run: |
          packaging/build_pkg_config.ps1
      - name: Build Wheels
        shell: pwsh
        run: |
          $VCPKG_ROOT =$env:VCPKG_ROOT
          $env:PATH="C:\build\pkg-config\bin;$env:PATH"
          $env:PKG_CONFIG_PATH="$VCPKG_ROOT\installed\x64-windows-static\lib\pkgconfig"
          $thing=pkg-config --cflags-only-I cairo
          $env:INCLUDE=python -c "a='${thing}';print(';'.join([i[2:] for i in a.split()]))"
          $env:LIB="$VCPKG_ROOT\installed\x64-windows-static\lib\cairo.lib"
          
          pip install build
          python -m build

      - uses: actions/upload-artifact@v2
        with:
          path: dist
          name: cairo.zip
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          path: vcpkg/buildtrees
          name: logs.zip

