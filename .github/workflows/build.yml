name: Build

on: [push]

jobs:
  build_cairo:
    name: Build cairo for Windows
    runs-on: windows-latest
    env:
      CAIRO_VERSION: "1.17.2"
      TOKENACCESS: ${{ secrets.GITHUB_TOKEN }} 
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }} for x64
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: git mingw-w64-x86_64-toolchain make
      - name: Download Dependency
        run: |
           curl -L https://eternallybored.org/misc/wget/releases/wget-1.20.3-win64.zip -o wget.zip
           7z x wget.zip -owget
           cd wget*
           move "wget*" "..\wget"
           cd ../
           $env:PATH = "$($PWD)\wget;$env:PATH"
           mkdir cairocompiled
           cd cairocompiled
           $USE_FREETYPE=1
           $CAIRO_VERSION="cairo-1.17.2"
           $PIXMAN_VERSION="pixman-0.40.0"
           $LIBPNG_VERSION="libpng-1.6.37"
           $ZLIB_VERSION="zlib-1.2.11"
           $FREETYPE_VERSION="freetype-2.10.2"
           wget -q --no-check-certificate -nc "https://www.cairographics.org/snapshots/$($CAIRO_VERSION).tar.xz"
           wget -q --no-check-certificate -nc "https://www.cairographics.org/releases/$($PIXMAN_VERSION).tar.gz"
           wget -q --no-check-certificate -nc "https://download.sourceforge.net/libpng/$($LIBPNG_VERSION).tar.gz"
           wget -q --no-check-certificate -nc "http://www.zlib.net/$($ZLIB_VERSION).tar.gz"
           wget -q --no-check-certificate -nc "http://download.savannah.gnu.org/releases/freetype/$($FREETYPE_VERSION).tar.gz"
           7z x "$($CAIRO_VERSION).tar.xz"
           7z x "$($CAIRO_VERSION).tar"
           move "$($CAIRO_VERSION)" "cairo"
           7z x "$($PIXMAN_VERSION).tar.gz"
           7z x "$($PIXMAN_VERSION).tar"
           move "$($PIXMAN_VERSION)" "pixman"
           7z x "$($LIBPNG_VERSION).tar.gz"
           7z x "$($LIBPNG_VERSION).tar"
           move "$($LIBPNG_VERSION)" "libpng"
           7z x "$($FREETYPE_VERSION).tar.gz"
           7z x "$($FREETYPE_VERSION).tar"
           move "$($FREETYPE_VERSION)" "freetype"
           7z x "$($ZLIB_VERSION).tar.gz"
           7z x "$($ZLIB_VERSION).tar"
           move "$($ZLIB_VERSION)" "zlib"
           #dir "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Enterprise\Common7\Tools"
           echo $env:PATH
           #cmd.exe /C "where devenv.com"
           #cmd.exe /C "where cl.exe"
           #dir "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE"
           tree "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise"
      - name: Build x64 Build
        shell: msys2 {0}
        run: |
           cd cairocompiled
           unset TMP
           unset TEMP
           export PATH="/c/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/Common7/IDE:/c/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/Common7/Tools:$PATH"
           curl -L https://github.com/preshing/cairo-windows/raw/master/build-cairo-windows.sh -o build-cairo-windows.sh
           ./build-cairo-windows.sh
           #C:\msys64\usr\bin\bash -lc './build-cairo-windows.sh'
      - uses: actions/upload-artifact@v2
        with:
         name: wheels-${{ matrix.python-version }}
         path: trymeson/cairo/build
