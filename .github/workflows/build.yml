name: Build Wheels

on:
  push:
  pull_request:
  release:
    types: [created]

jobs:
  build:
    env:
      buildDir: '${{ github.workspace }}/build/'
    runs-on: windows-2016
    strategy:
      matrix:
        python-version: [3.6]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: lukka/get-cmake@latest
      
      - name: Restore from cache and install vcpkg
        # Download and build vcpkg, without installing any port. If content is cached already, it is a no-op.
        uses: lukka/run-vcpkg@v6
        with:
          setupOnly: true
          vcpkgGitCommitId: a037d826492039db9d58af47a1e1248037d15f40
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build Cairo
        shell: pwsh
        run: |
          & "$env:VCPKG_ROOT/vcpkg.exe" install cairo[core]:x64-windows
      - name: Build PkgConfig
        shell: pwsh
        run: |
          packaging/build_pkg_config.ps1
      - name: Build Wheels
        shell: pwsh
        run: |
          $VCPKG_ROOT =$env:VCPKG_ROOT
          $env:PATH="C:\build\pkg-config\bin;$env:PATH"
          $env:INCLUDE="$VCPKG_ROOT\installed\x64-windows\include\cairo"
          $libs = Get-ChildItem -Path "$VCPKG_ROOT\installed\x64-windows\lib" â€“File
          $env:LIB=""
          for($i = 0; $i -lt $libs.length; $i++){
            $env:LIB+="$VCPKG_ROOT\installed\x64-windows\lib\"+$libs[$i].name+';'
          }
          pip install build
          python -m build

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          path: vcpkg\installed
          name: cairo.zip
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          path: dist
          name: dist.zip

