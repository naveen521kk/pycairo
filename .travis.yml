language: python

jobs:
  include:
    # perform a linux build
    - services: docker
    # perform a linux ARMv8 build
    - services: docker
      arch: arm64
    # perform a linux PPC64LE build
    - services: docker
      arch: ppc64le
    # perform a linux S390X build
    - services: docker
      arch: s390x
    # and a mac build
    - os: osx
      language: shell
    # and a windows build
    - os: windows
      language: shell
      before_install:
        - choco install python --version 3.8.0
        - export PATH="/c/Python38:/c/Python38/Scripts:$PATH"
        # make sure it's on PATH as 'python3'
        - ln -s /c/Python38/python.exe /c/Python38/python3.exe

matrix:
  include:
    - os: linux
      dist: trusty
      language: python
      python: "3.5"
      env: CFLAGS="-Werror -coverage"
    - os: linux
      dist: trusty
      language: python
      python: "3.6"
      env: CFLAGS="-Werror -coverage"
    - os: linux
      dist: xenial
      language: python
      python: "3.7"
      env: CFLAGS="-Werror -coverage"
    - os: linux
      dist: xenial
      language: python
      python: "3.8"
      env: CFLAGS="-Werror -coverage"
    - os: linux
      dist: xenial
      language: python
      python: "pypy3"
      env: CFLAGS="-Werror -coverage"
    - os: osx
      osx_image: xcode11.3
      language: generic
      env: CFLAGS="-Werror -coverage"


install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then travis_retry sudo apt-get update -q; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then travis_retry sudo apt-get install -y libcairo2-dev; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install pkg-config || true; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install cairo || true; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export PKG_CONFIG_PATH="/usr/local/opt/libffi/lib/pkgconfig"; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew unlink python@2 || true; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install python || true; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then python3 -m pip install virtualenv; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then virtualenv ../venv -p python3; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then source ../venv/bin/activate; fi
  - python -m pip install --upgrade setuptools
  - python -m pip install --upgrade pytest flake8 "sphinx<3" sphinx_rtd_theme coverage codecov hypothesis attrs
  - python -m pip install --upgrade mypy || true
  - if [[ "$TRAVIS_OS_NAME" != "osx" ]] && [[ "$TRAVIS_PYTHON_VERSION" != "3.8" ]] && [[ "${TRAVIS_PYTHON_VERSION:0:4}" != "pypy" ]]; then python -m pip install --upgrade pygame; fi
  - python3 -m pip install cibuildwheel==1.5.1

script:
  - python -m coverage run --branch setup.py test
  - python -m codecov --required || true
  - python -m flake8 .
  - python setup.py sdist
  - python setup.py bdist
  - python setup.py install --root=_root
  - python setup.py install --root="$(pwd)"/_root_abs
  - python setup.py bdist_egg
  - python setup.py bdist_wheel
  - python setup.py install --root=_root_setup
  - if [[ "${TRAVIS_PYTHON_VERSION:0:4}" != "pypy" ]] ; then python -m pip install .; fi
  - python -m sphinx -W -a -E -b html -n docs docs/_build
  - python3 -m cibuildwheel --output-dir wheelhouse
